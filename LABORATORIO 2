#include "mbed.h"
#include "Semaphore.h"
#include "Thread.h"
#include <cstdio>

// Blinking rate in milliseconds
#define BLINKING_RATE     500ms

// Definir I2C
#define VL53L0X_I2C_ADDRESS 0x52

// Registros del VL53L0X
#define VL53L0X_REG_SYSRANGE_START 0x00 //ir al registro de referencia
#define VL53L0X_REG_RESULT_RANGE_STATUS 0x14

//Pines, puertos e interrupciones
DigitalOut led(LED1);
DigitalOut trg(D8);
InterruptIn echo(D9);
BufferedSerial pc(USBTX,USBRX);
I2C i2c(D14, D15); // SDA, SCL

//prototipos
void isr_echo(void);
void start_sensor(void);
void read_sensor(void);
void p_distancia (void);


//tareas
Thread T_start_sensor(osPriorityNormal, OS_STACK_SIZE);
Thread T_read_sensor(osPriorityNormal, OS_STACK_SIZE);//Debe ser mas prioritaria 
Thread t_distancia (osPriorityNormal,OS_STACK_SIZE);
Semaphore s_echo(0);

//variables
unsigned int Centimetros=0;
int ultra;
long t_us=0;
char distancia;
Timer t;


int main()
{
    //arranque el programa
    trg=0;
    t.reset();
    t_distancia.start(p_distancia);
    T_start_sensor.start(start_sensor);
    T_read_sensor.start(read_sensor);
    echo .fall(isr_echo);
    printf("Arranque:\n\r");

    while (true) {
        led = !led;
        printf("%d\n\r", distancia);//impresion del sensor laser en centimetros
        //printf("la distancia en cm es: %03u \n\r", Centimetros);
        ThisThread::sleep_for(BLINKING_RATE);
    }
}

void isr_echo(void)
{
    s_echo.release();
}

void start_sensor(void)
{
    while(true)
    {
        trg=1;
        wait_us(10);
        trg=0;
        wait_us(200);
        t.reset();
        t.start();
        ThisThread::sleep_for(1s);
    }
}

void read_sensor(void)
{
    while(true)
    {
        s_echo.acquire();
        t.stop();
        t_us=t.read_high_resolution_us();
        Centimetros = int (t_us/58);
        ultra = Centimetros;
        //printf("la distancia en cm es: %03u \n\r", Centimetros);
    }
}

void p_distancia(void)
{
    
    char cmd[2];

    while(true){

    // Iniciar la medición de distancia
    cmd[0] = VL53L0X_REG_SYSRANGE_START;//ir al registro de referencia
    cmd[1] = 0x01;//ir al registro para iniciar el sensor 
    i2c.write(VL53L0X_I2C_ADDRESS, cmd, 2);

    // Esperar para que el sensor complete la medición
    wait_us(30000);

    // Leer la distancia medida
    cmd[0] = VL53L0X_REG_RESULT_RANGE_STATUS;//llamando el valor del sensor guardado en 0x14 de 12 bits
    i2c.write(VL53L0X_I2C_ADDRESS, cmd, 1);
    char data[12];
    i2c.read(VL53L0X_I2C_ADDRESS, data, 12);//leer el valor obtenido en 12 bits
    int distance = (data[10] << 8) | data[11];//hacer el corriemiento del valor anterior 
    distancia = distance/10;//convertir el valor de mm a cm 
    }
}
